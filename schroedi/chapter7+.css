
body {
    height: 100%;
    padding: 0;
    margin: 0;
}

#relundabs {

    /*Wir wollen Box, die in der Breite 50% ist aber trotzdem 40px Padding und Margin hat, hierfür calc*/

    background-color: black;
    width: calc(50% - 160px); /*160px da auf beiden Seiten 40px padding + 40px Margin*/
    height: calc(100% - 160px); /*Leerzeichen zwischen Zahlen und Rechenzeichen wichtig!!!*/

    padding: 40px;
    margin: 40px;


}


#firster {

    opacity: 0.4;
    background-color: lightgreen;

}


#tester {

    background-color: aqua;

    width: 124px;
    height: 187px;

    opacity: 0;


}



#one {

    background-color: red;
    width: 200px;
    padding: 20px 5px 15px;
    margin: 20px auto;
    /*Wenn keine height gesetzt ist, wird automatisch so viel genommen wie für den Text benötigt ist*/

}

#two {

    background-color: blue;
    height: 50px;
    padding: 10px;
    border : 10px;
    margin : 10px auto; /*Sorgt dafür, dass die Margin nach oben 10px sind, der Rest wird zentriert*/

}

#three {

    background-color: green;
    height: 200px;
    width: 100px;
    padding : 10px 10px;
    border: 10px 10px;
    margin: 10px 10px;

}

#four {

    background-color: yellow;
    height: 20%;
    width: 10%;
    padding: 20% 20% 20%;
    border: 10% 10% 10%;
    margin: 10% 10% 10%;


}

#five {

    background-color: orange;
    height: 20em;
    width: 10em;
    margin: auto; /*WICHTIG: ZENTRIERT DIE BOX!*/

}

#six {
    background-color: blanchedalmond;
}

div {

    overflow: auto; /*Wichtige Eigenschaft: Sorgt dafür, dass wenn nötig ein Scrollbalken verwendet wird und man Scrollen kann.*/
    margin-bottom: 5px;
    /*Auch möglich: overflow:hidden, sorgt dafür dass überflüssiger Text nicht angezeigt wird*/

}

#seconder {

   position: relative;
   height: 1000px;
   width: 100%;
   background-color: lightblue;

}

.stapel {

    position: absolute;
}

#cree {

    background-color: aquamarine;
    height: 187px;
    width: 124px;
    top: 0;

}



#one1 {

    background-color: red;
    width: 124px;
    height: 55px;
    top: 187px;
}

#two1 {

    background-color: blue;
    width: 166px;
    height: 55px;
    top: calc(187px + 55px); /*calc kann man nutzen um Größen zu addieren, auch absolute und relative Angaben lassen sich addieren*/
  
}

#three1 {

    background-color: green;
    width: 121px;
    height: 42px;
    left: 124px;

}

#four1 {

    background-color: yellow;
    width: 121px;
    height: 100px;
    top: 42px;
    left: 124px;


}

#five1 {

    background-color: orange;
    width: 121px;
    height: 100px;
    top: 142px;
    left: 124px;

}

#six1 {
    background-color: blanchedalmond;
    width: 79px;
    height: 55;
    top: 242px;
    left: 166px;
}




#dreck {

    background-color: aquamarine;
    height: 50px;
    width: 50px;
    position: relative;

}

#riesendreck {

    background-color: blueviolet;
    height: 50px;
    width: 50px;
    position: absolute;
    top: 20px;

}

#bild {

    height: 10%;
    width: 20%;
    float: right; /*Alles was nicht floaten kann floatet um das Bild links herum*/
    clear: left;
}
blockquote{

    float: left;
    border: 10px solid black;
    padding: 10px;
    text-align: center;
    width: 240px;
    margin: 10;

}

#clearer {

    clear:left; /*Absatz, der Anfangs gefloatet ist, kann so unter das entsprechende Objekt wandern.*/
                /*Left bezieht sich auf Elemente links. Both würde beide Seiten betrachten.*/

}

#firstcol {

    margin-left: 10px;
    background-color: blueviolet;
    height: 100%;
    position: absolute;
    right: 66%;

}

#secondcol {

    margin-right: 10px;
    background-color: aqua;
    height: 100%;
    position: absolute;
    left: 33%;

}

a.kiste {   /*Durch Display:block breitet sich der Link der Klasse kiste auf das ganze Rechteck aus, das ganze Rechteck wird klickbar.*/
    display: block; /*<a> Tags sind eigentlich inline, hier wird er zum Block gemacht*/
    width: 100%;
    height: 100%;
}


#navigation{
    height: 10%;
    width: 100%;
    background-color: lightblue;
    margin: 0;
    padding: 10% 0 0 0;

}

#navigation a, #navigation a:visited{

    float: left;
    display: block;
    width: 33%;
    height: 30px;
    background-color: lightgreen;
    border-bottom: 1px solid darkgray;
    color: black;
    font-family: monospace;
    text-align: center;
    border: 1px solid black;

}

#navigation a:hover {
    background-color: white;
}

article {
    display:none; /*Damit verschwindet der div und wird von allen Objekten ignoriert. Er wird allerdings weiter
                    im Quellcode behalten. Vorteilhaft um coole Sachen mit JS zu bauen. */
}


#z-index {
    position: relative;
    height: 300px;
    width: 100%;
}

#stackfirst {

    background-color: aqua;
    height: 50%;
    width: 50%;
    position: absolute;
    z-index: 2;

}

#stacksecond {

    background-color: red;
    height: 100%;
    width: 50%;
    position: absolute;
    z-index: 1;
}


#round {
    height: 200px;
    width: 200px;
    background-color: black;
    margin: auto;
    border-radius: 20px;
}

#round2 {
    height: 200px;
    width: 200px;
    background-color: purple;
    margin: auto;
    border-radius: 20px 10px 0px 60px;
    border-left: 2px solid black;
    border-top: 5px firebrick dashed;
    border-right: 3px green solid;
}

.spanny {
    margin: 0 auto;
    text-align: center;
    width: 80%;
    height: 100px;
    display: block;
}

#sent {
    line-height: 30px; /*Bestimmt den Abstand zwischen Zeilen*/
    text-shadow: -0.2em 0.2em 5px lightblue;  /*Gibt der Schrift einen Schatten, 5px hier gibt an wie groß die Schattenfläche ist, umso unschärfer wird er*/
    box-shadow: 0 0 20px 10px red inset; /*Macht einen Schatten um eine Box, inset sorgt dafür dass der Schatten innerhalb der Box ist, die letzten 10px geben den Spread: Der Schatten wird in alle Richtungen um 10px erweitert*/
}



#glowy {
    text-shadow: 0 0 20px yellow, 0px 0px 10px orange, 0px 0px 5px red; /*Mit Komma getrennt können mehrere Schatten eingegeben werden*/
    margin: 10% auto;
}

#keyframe {
    width: 100%;
    height: 500px;
    background-color: lightcyan;
    position: relative;
}

@keyframes colors {
    from {background-color: yellow;}
    33% {background-color: red;}
    66% {background-color: blue;}
    to {background-color: yellow;}
}

#mover {
    animation-name: colors;
    animation-duration: 6s;
    animation-iteration-count: infinite;



    width: 50%;
    height: 50%;
    position: absolute;
    left: 25%;
    top: calc(500px * 0.25);
}

#pacman {
    width: 100%;
    height: 400px;
    background-color: lightgoldenrodyellow;
    position: relative;
}

@keyframes pinky {
    from {left: 0px}
    to {left: 500px}
}

#pinkghost {
    position: absolute;
    animation-name: pinky;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-direction: alternate; /*Lässt die Animation vorwärts und rückwärts laufen*/
    animation-delay: 5s; /*Startet die Animation verspätet*/
    animation-timing-function: linear; /*Sorgt dafür, dass die Animation immer in der gleichen Geschwindigkeit läuft und nicht erst beschleunigt und wieder verlangsamt*/
     
}

#pinkghost:hover {
    animation-play-state: paused; /*Pausiert die Animation, kann später mit JS verändert werden*/
}

#trans {
    position: relative;
    top: 50%;
    text-align: center;

    background-color: red;
    color: blue;
    transition-property: background-color, color; /*Welche Werte beeinflusst werden sollen durch die transition: Auch "all" möglich*/
    transition-duration: 5s;
    /*Alle weiteren Eingaben wie bei keyframes auch möglich:
    transition-delay, transition-timing-function*/

}

#trans:hover {
    background-color: blue;
    color: red;
}

#coffee {
    width: 100%;
    height: 200px;

    
    animation-name: coffee;
    animation-duration: 5s;
    animation-timing-function: linear;
    animation-play-state: paused;
    animation-fill-mode: forwards; /*Sorgt dafür, dass der Endstate beibehalten wird, sobald die Animation durchgelaufen ist*/
}

#coffee:hover {
    animation-play-state: running;
}

@keyframes coffee {
    from {background-color: #423027;}
    to {background-color: #A77F6B;}
}

#absatz {
    transform-origin: center 100px; /*Setzt den Transformations Ursprung woanders*/
    transform: rotate(-2deg) translate(300px, 10px) scale(1.5); /*DEG steht für Degree*/
    /*Transform ist in alle 3 Dimensionen möglich (z.B. rotateX, rotateY, rotateZ)*/
}

#threed {
    transform: rotateY(120deg);
    perspective: 200px; /*Je kleiner der Wert, desto stärker die Verzerrung*/
}


#Newspaper{
    width: 100%;
    column-width: 12em;
    column-count: 4;
    -webkit-column-count: 4;
    -moz-column-count: 4;
    column-gap: 3em; /*Spaltenabstand*/
    column-rule: 1px solid black; /*Sorgt für die Spaltenbegrenzungen*/
    hyphens: auto;
    text-align: justify;
}

#Newspaper h1 {
    column-span: all; /*Überschrift über alle Spalten*/
}